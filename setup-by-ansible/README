* Make a hosts file like

  $ cat hosts
  [all]
  192.168.10.1

* run (example): initialize (mainly add the first user).

  The script creates a new user whose name can be given by 'user_name' variable.

  - When you can login as ubuntu who can be root by sudo.

  $ ansible-playbook -i hosts initialize.yaml --extra-vars user=$USER -u ubuntu -k -K -b

    -k: Ask password to login
    -K: Ask password for sudo.
        So it can be omitted if the user (ubuntu in the above) becomes root w/o password.
    -b: Run with sudo

  - When you use python3 on the target, the following option should be added.

     -e 'ansible_python_interpreter=/usr/bin/python3'

  - When you can login as root with a password.

  $ ansible-playbook -i hosts initialize.yaml --extra-vars user=user_name -u root -k

* run: setup home directory

  $ ansible-playbook -i hosts setup-home.yaml

# An example for localhost

    $ ansible-playbook -i localhost, -c local misc/priv-misc/setup-by-ansible/setup-home.yaml

* Note
The following packages shall be installed before the above run.

Some matter in .bashrc inserts escape sequences and makes it fail sometimes.
In such case, change the TERM environment like,

  $ TERM=xterm ansible-playbook -i hosts setup-home.yaml

- python
- git
